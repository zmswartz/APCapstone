#BlueJ class context
comment0.params=
comment0.target=CheckersBoard()
comment0.text=\r\n\ Default\ constructor\ for\ objects\ of\ class\ CheckersBoard\r\n
comment1.params=
comment1.target=int\ getCurrentPlayer()
comment1.text=\r\n\ Returns\ the\ number\ that\ represents\ the\ current\ player\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @return\ \ the\ number\ of\ the\ current\ player\r\n
comment10.params=player
comment10.target=java.lang.String[]\ getAllMoves(int)
comment10.text=\r\n\ Returns\ all\ of\ the\ possible\ moves\ a\ player\ can\ make\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @param\ \ \ player\ \ \ the\ value\ of\ the\ current\ player\r\n\ @return\ \ an\ array\ of\ all\ of\ the\ moves\ the\ player\ can\ make\r\n
comment11.params=
comment11.target=void\ printer()
comment11.text=\r\n\ A\ method\ used\ during\ the\ early\ stages\ of\ testing\ which\ prints\ the\ pieces\ as\ 1\ or\ -1\ and\ puts\ tabs\ between\ them\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ prints\ out\ the\ current\ state\ of\ the\ board\r\n
comment12.params=g2
comment12.target=void\ draw(java.awt.Graphics2D)
comment12.text=\r\n\ Draws\ the\ current\ state\ of\ the\ board.\ Kings\ are\ drawn\ with\ white\ boxes\ inside\ of\ them\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ the\ current\ state\ of\ the\ board\ is\ draws\r\n\ @param\ \ \ g2\ \ \ a\ Graphics2D\ object\ to\ draw\ with\r\n
comment13.params=x\ y\ player
comment13.target=void\ actionAt(int,\ int,\ int)
comment13.text=\r\n\ Does\ the\ proper\ action\ based\ on\ what\ the\ current\ location\ selected\ is\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ the\ proper\ action\ is\ made\ based\ on\ what\ the\ previous\ action\ was\r\n\ @param\ \ \ x\ \ \ x\ coordinate\ of\ the\ event\r\n\ @param\ \ \ \ \ \ \ \ \ y\ \ \ y\ coordinate\ of\ the\ event\r\n\ @param\ \ \ \ \ \ \ \ \ player\ \ \ the\ value\ of\ the\ player\r\n
comment14.params=
comment14.target=void\ continuePlay()
comment14.text=\r\n\ Continues\ the\ game\ after\ a\ move\ is\ made.\ \ Prints\ the\ current\ player\ and\ if\ a\ move\ is\ forced.\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ the\ current\ player\ has\ been\ printed\ and\ isForcedMove\ has\ been\ updated\r\n
comment15.params=
comment15.target=void\ makeKing()
comment15.text=\r\n\ Checks\ if\ any\ piece\ is\ in\ the\ other\ teams\ kings\ row.\ \ If\ there\ is,\ it\ makes\ it\ a\ king\ piece\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ any\ piece\ in\ the\ other\ teams\ king's\ row\ has\ become\ a\ king\r\n
comment16.params=
comment16.target=void\ isGameOver()
comment16.text=\r\n\ Checks\ if\ the\ game\ is\ over\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ if\ the\ game\ is\ over,\ the\ winner\ is\ printed\r\n
comment2.params=
comment2.target=void\ changePlayer()
comment2.text=\r\n\ Changes\ the\ current\ player\ to\ the\ other\ player\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ currentPlayer\ has\ been\ changed\ to\ the\ other\ player\r\n
comment3.params=
comment3.target=void\ displayCurrentPlayer()
comment3.text=\r\n\ Prints\ the\ current\ player's\ color\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ prints\ out\ the\ current\ player\r\n
comment4.params=x\ y
comment4.target=Piece\ getPieceAt(int,\ int)
comment4.text=\r\n\ Returns\ the\ piece\ at\ the\ x\ and\ y\ value\r\n\r\n\ @pre\ \ \ \ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @param\ \ \ \ x\ \ \ \ the\ x\ coordinate\r\n\ \ @param\ \ \ \ \ \ \ \ \ y\ \ \ \ the\ y\ coordinate\r\n\ @return\ \ \ \ the\ piece\ at\ the\ x\ and\ y\ value\r\n
comment5.params=move
comment5.target=void\ makeMove(java.lang.String)
comment5.text=\r\n\ Makes\ the\ move\ that\ is\ passed\ in\ and\ removes\ a\ piece\ if\ it\ is\ jumped\ over\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ a\ piece\ is\ moved\ from\ one\ location\ to\ another\r\n\ @param\ \ \ move\ \ \ the\ move\ to\ be\ made\ in\ the\ format\ of\ oldX\ +\ oldY\ +\ newX\ +\ newY\ as\ a\ String\r\n
comment6.params=player
comment6.target=boolean\ isPossibleMove(int)
comment6.text=\r\n\ Checks\ if\ there\ is\ a\ possible\ move\ to\ be\ made\ for\ a\ given\ player\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @param\ \ \ player\ \ \ the\ value\ of\ the\ player\r\n\ @return\ \ true\ if\ there\ is\ a\ possible\ move,\ false\ if\ not\r\n
comment7.params=player
comment7.target=java.lang.String[]\ forcedMove(int)
comment7.text=\r\n\ Returns\ a\ list\ of\ all\ of\ the\ possible\ forced\ moves\ a\ player\ must\ make\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @param\ \ \ player\ \ \ the\ value\ of\ the\ player\r\n\ @return\ \ an\ array\ of\ all\ of\ the\ forced\ moves\ of\ a\ given\ player\r\n
comment8.params=
comment8.target=void\ makeBoard()
comment8.text=\r\n\ Sets\ the\ game\ array\ to\ initial\ state\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @post\ \ \ \ game\ array\ is\ at\ its\ initial\ state\r\n
comment9.params=x\ y
comment9.target=java.lang.String[]\ getMovesOfPiece(int,\ int)
comment9.text=\r\n\ Returns\ an\ array\ with\ all\ of\ the\ possible\ moves\ of\ a\ given\ piece\r\n\r\n\ @pre\ \ \ \ \ the\ CheckersBoard\ object\ is\ initialized\r\n\ @param\ \ \ x\ \ \ the\ x\ coordinate\ of\ the\ piece\r\n\ @param\ \ \ \ \ \ \ \ \ y\ \ \ the\ y\ coordinate\ of\ the\ piece\r\n\ @return\ \ an\ array\ of\ all\ of\ the\ moves\ of\ a\ piece\r\n
numComments=17
